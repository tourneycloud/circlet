// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: redirectservice.proto

#include "redirectservice.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace circlet {
namespace v1 {
constexpr Redirect::Redirect(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : from_location_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , to_location_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct RedirectDefaultTypeInternal {
  constexpr RedirectDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RedirectDefaultTypeInternal() {}
  union {
    Redirect _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RedirectDefaultTypeInternal _Redirect_default_instance_;
constexpr CreateRedirectRequest::CreateRedirectRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : redirect_(nullptr){}
struct CreateRedirectRequestDefaultTypeInternal {
  constexpr CreateRedirectRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CreateRedirectRequestDefaultTypeInternal() {}
  union {
    CreateRedirectRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CreateRedirectRequestDefaultTypeInternal _CreateRedirectRequest_default_instance_;
}  // namespace v1
}  // namespace circlet
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_redirectservice_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_redirectservice_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_redirectservice_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_redirectservice_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::circlet::v1::Redirect, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::circlet::v1::Redirect, from_location_),
  PROTOBUF_FIELD_OFFSET(::circlet::v1::Redirect, to_location_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::circlet::v1::CreateRedirectRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::circlet::v1::CreateRedirectRequest, redirect_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::circlet::v1::Redirect)},
  { 8, -1, -1, sizeof(::circlet::v1::CreateRedirectRequest)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::circlet::v1::_Redirect_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::circlet::v1::_CreateRedirectRequest_default_instance_),
};

const char descriptor_table_protodef_redirectservice_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\025redirectservice.proto\022\ncirclet.v1\"6\n\010R"
  "edirect\022\025\n\rfrom_location\030\001 \001(\t\022\023\n\013to_loc"
  "ation\030\002 \001(\t\"\?\n\025CreateRedirectRequest\022&\n\010"
  "redirect\030\001 \001(\0132\024.circlet.v1.Redirect2g\n\017"
  "RedirectService\022T\n\027CreateShortenedRedire"
  "ct\022!.circlet.v1.CreateRedirectRequest\032\024."
  "circlet.v1.Redirect\"\000b\006proto3"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_redirectservice_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_redirectservice_2eproto = {
  false, false, 269, descriptor_table_protodef_redirectservice_2eproto, "redirectservice.proto", 
  &descriptor_table_redirectservice_2eproto_once, nullptr, 0, 2,
  schemas, file_default_instances, TableStruct_redirectservice_2eproto::offsets,
  file_level_metadata_redirectservice_2eproto, file_level_enum_descriptors_redirectservice_2eproto, file_level_service_descriptors_redirectservice_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_redirectservice_2eproto_getter() {
  return &descriptor_table_redirectservice_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_redirectservice_2eproto(&descriptor_table_redirectservice_2eproto);
namespace circlet {
namespace v1 {

// ===================================================================

class Redirect::_Internal {
 public:
};

Redirect::Redirect(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:circlet.v1.Redirect)
}
Redirect::Redirect(const Redirect& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  from_location_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_from_location().empty()) {
    from_location_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_from_location(), 
      GetArenaForAllocation());
  }
  to_location_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_to_location().empty()) {
    to_location_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_to_location(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:circlet.v1.Redirect)
}

void Redirect::SharedCtor() {
from_location_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
to_location_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Redirect::~Redirect() {
  // @@protoc_insertion_point(destructor:circlet.v1.Redirect)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Redirect::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  from_location_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  to_location_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Redirect::ArenaDtor(void* object) {
  Redirect* _this = reinterpret_cast< Redirect* >(object);
  (void)_this;
}
void Redirect::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Redirect::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Redirect::Clear() {
// @@protoc_insertion_point(message_clear_start:circlet.v1.Redirect)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  from_location_.ClearToEmpty();
  to_location_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Redirect::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string from_location = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_from_location();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "circlet.v1.Redirect.from_location"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string to_location = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_to_location();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "circlet.v1.Redirect.to_location"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Redirect::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:circlet.v1.Redirect)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string from_location = 1;
  if (!this->_internal_from_location().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_from_location().data(), static_cast<int>(this->_internal_from_location().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "circlet.v1.Redirect.from_location");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_from_location(), target);
  }

  // string to_location = 2;
  if (!this->_internal_to_location().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_to_location().data(), static_cast<int>(this->_internal_to_location().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "circlet.v1.Redirect.to_location");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_to_location(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:circlet.v1.Redirect)
  return target;
}

size_t Redirect::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:circlet.v1.Redirect)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string from_location = 1;
  if (!this->_internal_from_location().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_from_location());
  }

  // string to_location = 2;
  if (!this->_internal_to_location().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_to_location());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Redirect::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Redirect::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Redirect::GetClassData() const { return &_class_data_; }

void Redirect::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Redirect *>(to)->MergeFrom(
      static_cast<const Redirect &>(from));
}


void Redirect::MergeFrom(const Redirect& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:circlet.v1.Redirect)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_from_location().empty()) {
    _internal_set_from_location(from._internal_from_location());
  }
  if (!from._internal_to_location().empty()) {
    _internal_set_to_location(from._internal_to_location());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Redirect::CopyFrom(const Redirect& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:circlet.v1.Redirect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Redirect::IsInitialized() const {
  return true;
}

void Redirect::InternalSwap(Redirect* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &from_location_, lhs_arena,
      &other->from_location_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &to_location_, lhs_arena,
      &other->to_location_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata Redirect::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_redirectservice_2eproto_getter, &descriptor_table_redirectservice_2eproto_once,
      file_level_metadata_redirectservice_2eproto[0]);
}

// ===================================================================

class CreateRedirectRequest::_Internal {
 public:
  static const ::circlet::v1::Redirect& redirect(const CreateRedirectRequest* msg);
};

const ::circlet::v1::Redirect&
CreateRedirectRequest::_Internal::redirect(const CreateRedirectRequest* msg) {
  return *msg->redirect_;
}
CreateRedirectRequest::CreateRedirectRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:circlet.v1.CreateRedirectRequest)
}
CreateRedirectRequest::CreateRedirectRequest(const CreateRedirectRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_redirect()) {
    redirect_ = new ::circlet::v1::Redirect(*from.redirect_);
  } else {
    redirect_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:circlet.v1.CreateRedirectRequest)
}

void CreateRedirectRequest::SharedCtor() {
redirect_ = nullptr;
}

CreateRedirectRequest::~CreateRedirectRequest() {
  // @@protoc_insertion_point(destructor:circlet.v1.CreateRedirectRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CreateRedirectRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete redirect_;
}

void CreateRedirectRequest::ArenaDtor(void* object) {
  CreateRedirectRequest* _this = reinterpret_cast< CreateRedirectRequest* >(object);
  (void)_this;
}
void CreateRedirectRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateRedirectRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateRedirectRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:circlet.v1.CreateRedirectRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && redirect_ != nullptr) {
    delete redirect_;
  }
  redirect_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateRedirectRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .circlet.v1.Redirect redirect = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_redirect(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateRedirectRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:circlet.v1.CreateRedirectRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .circlet.v1.Redirect redirect = 1;
  if (this->_internal_has_redirect()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::redirect(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:circlet.v1.CreateRedirectRequest)
  return target;
}

size_t CreateRedirectRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:circlet.v1.CreateRedirectRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .circlet.v1.Redirect redirect = 1;
  if (this->_internal_has_redirect()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *redirect_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateRedirectRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreateRedirectRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateRedirectRequest::GetClassData() const { return &_class_data_; }

void CreateRedirectRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CreateRedirectRequest *>(to)->MergeFrom(
      static_cast<const CreateRedirectRequest &>(from));
}


void CreateRedirectRequest::MergeFrom(const CreateRedirectRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:circlet.v1.CreateRedirectRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_redirect()) {
    _internal_mutable_redirect()->::circlet::v1::Redirect::MergeFrom(from._internal_redirect());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateRedirectRequest::CopyFrom(const CreateRedirectRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:circlet.v1.CreateRedirectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateRedirectRequest::IsInitialized() const {
  return true;
}

void CreateRedirectRequest::InternalSwap(CreateRedirectRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(redirect_, other->redirect_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateRedirectRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_redirectservice_2eproto_getter, &descriptor_table_redirectservice_2eproto_once,
      file_level_metadata_redirectservice_2eproto[1]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace circlet
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::circlet::v1::Redirect* Arena::CreateMaybeMessage< ::circlet::v1::Redirect >(Arena* arena) {
  return Arena::CreateMessageInternal< ::circlet::v1::Redirect >(arena);
}
template<> PROTOBUF_NOINLINE ::circlet::v1::CreateRedirectRequest* Arena::CreateMaybeMessage< ::circlet::v1::CreateRedirectRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::circlet::v1::CreateRedirectRequest >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
